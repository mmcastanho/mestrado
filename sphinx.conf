#
# Sphinx configuration file sample
#
# WARNING! While this sample file mentions all available options,
# it contains (very) short helper descriptions only. Please refer to
# doc/sphinx.html for details.
#

#############################################################################
## data source definition
#############################################################################

source src1
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950101.xml
}
source src2
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950102.xml
}

source src3
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950103.xml
}
source src4
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950104.xml
}
source src5
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950105.xml
}
source src6
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950106.xml
}
source src7
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950107.xml
}
source src8
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950108.xml
}
source src9
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950109.xml
}
source src10
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950110.xml
}
source src11
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950111.xml
}
source src12
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950112.xml
}

source src13
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950113.xml
}
source src14
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950114.xml
}
source src15
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950115.xml
}
source src16
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950116.xml
}
source src17
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950117.xml
}
source src18
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950118.xml
}
source src19
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950119.xml
}
source src20
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950120.xml
}
source src21
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950121.xml
}
source src22
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950122.xml
}

source src23
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950123.xml
}
source src24
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950124.xml
}
source src25
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950125.xml
}
source src26
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950126.xml
}
source src27
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950127.xml
}
source src28
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950128.xml
}
source src29
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950129.xml
}
source src30
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950130.xml
}
source src31
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950131.xml
}
source src32
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950201.xml
}

source src33
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950202.xml
}
source src34
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950203.xml
}
source src35
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950204.xml
}
source src36
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950205.xml
}
source src37
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950206.xml
}
source src38
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950207.xml
}
source src39
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950208.xml
}
source src40
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950209.xml
}
source src41
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950210.xml
}
source src42
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950211.xml
}

source src43
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950212.xml
}
source src44
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950213.xml
}
source src45
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950214.xml
}
source src46
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950215.xml
}
source src47
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950216.xml
}
source src48
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950217.xml
}
source src49
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950218.xml
}
source src50
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950219.xml
}
source src51
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950220.xml
}
source src52
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950221.xml
}

source src53
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950222.xml
}
source src54
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950223.xml
}
source src55
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950224.xml
}
source src56
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950225.xml
}
source src57
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950226.xml
}
source src58
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950227.xml
}
source src59
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950228.xml
}
source src60
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950301.xml
}
source src61
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950302.xml
}
source src62
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950303.xml
}

source src63
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950304.xml
}
source src64
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950305.xml
}
source src65
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950306.xml
}
source src66
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950307.xml
}
source src67
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950308.xml
}
source src68
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950309.xml
}
source src69
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950310.xml
}
source src70
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950311.xml
}
source src71
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950312.xml
}
source src72
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950313.xml
}

source src73
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950314.xml
}
source src74
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950315.xml
}
source src75
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950316.xml
}
source src76
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950317.xml
}
source src77
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950318.xml
}
source src78
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950319.xml
}
source src79
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950320.xml
}
source src80
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950321.xml
}
source src81
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950322.xml
}
source src82
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950323.xml
}

source src83
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950324.xml
}
source src84
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950325.xml
}
source src85
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950326.xml
}
source src86
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950327.xml
}
source src87
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950328.xml
}
source src88
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950329.xml
}
source src89
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950330.xml
}
source src90
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950331.xml
}
source src91
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950401.xml
}
source src92
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950402.xml
}

source src93
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950403.xml
}
source src94
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950404.xml
}
source src95
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950405.xml
}
source src96
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950406.xml
}
source src97
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950407.xml
}
source src98
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950408.xml
}
source src99
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950409.xml
}
source src100
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950410.xml
}
source src101
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950411.xml
}
source src102
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950412.xml
}

source src103
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950413.xml
}
source src104
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950414.xml
}
source src105
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950415.xml
}
source src106
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950416.xml
}
source src107
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950417.xml
}
source src108
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950418.xml
}
source src109
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950419.xml
}
source src110
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950420.xml
}
source src111
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950421.xml
}
source src112
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950422.xml
}

source src113
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950423.xml
}
source src114
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950424.xml
}
source src115
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950425.xml
}
source src116
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950426.xml
}
source src117
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950427.xml
}
source src118
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950428.xml
}
source src119
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950429.xml
}
source src120
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950430.xml
}
source src121
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950501.xml
}
source src122
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950502.xml
}

source src123
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950503.xml
}
source src124
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950504.xml
}
source src125
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950505.xml
}
source src126
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950506.xml
}
source src127
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950507.xml
}
source src128
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950508.xml
}
source src129
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950509.xml
}
source src130
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950510.xml
}
source src131
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950511.xml
}
source src132
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950512.xml
}

source src133
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950513.xml
}
source src134
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950514.xml
}
source src135
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950515.xml
}
source src136
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950516.xml
}
source src137
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950517.xml
}
source src138
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950518.xml
}
source src139
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950519.xml
}
source src140
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950520.xml
}
source src141
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950521.xml
}
source src142
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950522.xml
}

source src143
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950523.xml
}
source src144
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950524.xml
}
source src145
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950525.xml
}
source src146
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950526.xml
}
source src147
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950527.xml
}
source src148
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950528.xml
}
source src149
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950529.xml
}
source src150
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950530.xml
}
source src151
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950531.xml
}
source src152
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950601.xml
}

source src153
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950602.xml
}
source src154
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950603.xml
}
source src155
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950604.xml
}
source src156
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950605.xml
}
source src157
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950606.xml
}
source src158
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950607.xml
}
source src159
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950608.xml
}
source src160
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950609.xml
}
source src161
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950610.xml
}
source src162
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950611.xml
}

source src163
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950612.xml
}
source src164
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950613.xml
}
source src165
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950614.xml
}
source src166
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950615.xml
}
source src167
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950616.xml
}
source src168
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950617.xml
}
source src169
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950618.xml
}
source src170
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950619.xml
}
source src171
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950620.xml
}
source src172
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950621.xml
}

source src173
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950622.xml
}
source src174
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950623.xml
}
source src175
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950624.xml
}
source src176
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950625.xml
}
source src177
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950626.xml
}
source src178
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950627.xml
}
source src179
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950628.xml
}
source src180
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950629.xml
}
source src181
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950630.xml
}
source src182
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950701.xml
}

source src183
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950702.xml
}
source src184
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950703.xml
}
source src185
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950704.xml
}
source src186
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950705.xml
}
source src187
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950706.xml
}
source src188
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950707.xml
}
source src189
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950708.xml
}
source src190
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950709.xml
}
source src191
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950710.xml
}
source src192
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950711.xml
}

source src193
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950712.xml
}
source src194
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950713.xml
}
source src195
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950714.xml
}
source src196
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950715.xml
}
source src197
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950716.xml
}
source src198
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950717.xml
}
source src199
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950718.xml
}
source src200
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950719.xml
}
source src201
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950720.xml
}
source src202
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950721.xml
}

source src203
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950722.xml
}
source src204
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950723.xml
}
source src205
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950724.xml
}
source src206
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950725.xml
}
source src207
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950726.xml
}
source src208
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950727.xml
}
source src209
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950728.xml
}
source src210
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950729.xml
}
source src211
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950730.xml
}
source src212
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950731.xml
}

source src213
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950801.xml
}
source src214
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950802.xml
}
source src215
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950803.xml
}
source src216
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950804.xml
}
source src217
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950805.xml
}
source src218
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950806.xml
}
source src219
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950807.xml
}
source src220
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950808.xml
}
source src221
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950809.xml
}
source src222
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950810.xml
}

source src223
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950811.xml
}
source src224
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950812.xml
}
source src225
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950813.xml
}
source src226
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950814.xml
}
source src227
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950815.xml
}
source src228
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950816.xml
}
source src229
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950817.xml
}
source src230
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950818.xml
}
source src231
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950819.xml
}
source src232
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950820.xml
}

source src233
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950821.xml
}
source src234
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950822.xml
}
source src235
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950823.xml
}
source src236
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950824.xml
}
source src237
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950825.xml
}
source src238
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950826.xml
}
source src239
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950827.xml
}
source src240
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950828.xml
}
source src241
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950829.xml
}
source src242
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950830.xml
}

source src243
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950831.xml
}
source src244
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950901.xml
}
source src245
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950902.xml
}
source src246
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950903.xml
}
source src247
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950904.xml
}
source src248
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950905.xml
}
source src249
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950906.xml
}
source src250
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950907.xml
}
source src251
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950908.xml
}
source src252
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950909.xml
}

source src253
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950910.xml
}
source src254
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950911.xml
}
source src255
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950912.xml
}
source src256
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950913.xml
}
source src257
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950914.xml
}
source src258
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950915.xml
}
source src259
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950916.xml
}
source src260
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950917.xml
}
source src261
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950918.xml
}
source src262
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950919.xml
}

source src263
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950920.xml
}
source src264
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950921.xml
}
source src265
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950922.xml
}
source src266
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950923.xml
}
source src267
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950924.xml
}
source src268
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950925.xml
}
source src269
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950926.xml
}
source src270
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950927.xml
}
source src271
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950928.xml
}
source src272
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950929.xml
}

source src273
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.950930.xml
}
source src274
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951001.xml
}
source src275
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951002.xml
}
source src276
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951003.xml
}
source src277
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951004.xml
}
source src278
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951005.xml
}
source src279
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951006.xml
}
source src280
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951007.xml
}
source src281
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951008.xml
}
source src282
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951009.xml
}

source src283
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951010.xml
}
source src284
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951011.xml
}
source src285
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951012.xml
}
source src286
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951013.xml
}
source src287
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951014.xml
}
source src288
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951015.xml
}
source src289
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951016.xml
}
source src290
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951017.xml
}
source src291
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951018.xml
}
source src292
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951019.xml
}

source src293
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951020.xml
}
source src294
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951021.xml
}
source src295
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951022.xml
}
source src296
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951023.xml
}
source src297
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951024.xml
}
source src298
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951025.xml
}
source src299
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951026.xml
}
source src300
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951027.xml
}
source src301
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951028.xml
}
source src302
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951029.xml
}

source src303
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951030.xml
}
source src304
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951031.xml
}
source src305
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951101.xml
}
source src306
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951102.xml
}
source src307
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951103.xml
}
source src308
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951104.xml
}
source src309
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951105.xml
}
source src310
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951106.xml
}
source src311
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951107.xml
}
source src312
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951108.xml
}

source src313
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951109.xml
}
source src314
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951110.xml
}
source src315
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951111.xml
}
source src316
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951112.xml
}
source src317
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951113.xml
}
source src318
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951114.xml
}
source src319
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951115.xml
}
source src320
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951116.xml
}
source src321
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951117.xml
}
source src322
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951118.xml
}

source src323
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951119.xml
}
source src324
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951120.xml
}
source src325
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951121.xml
}
source src326
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951122.xml
}
source src327
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951123.xml
}
source src328
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951124.xml
}
source src329
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951125.xml
}
source src330
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951126.xml
}
source src331
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951127.xml
}
source src332
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951128.xml
}

source src333
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951129.xml
}
source src334
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951130.xml
}
source src335
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951201.xml
}
source src336
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951202.xml
}
source src337
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951203.xml
}
source src338
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951204.xml
}
source src339
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951205.xml
}
source src340
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951206.xml
}
source src341
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951207.xml
}
source src342
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951208.xml
}

source src343
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951209.xml
}
source src344
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951210.xml
}
source src345
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951211.xml
}
source src346
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951212.xml
}
source src347
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951213.xml
}
source src348
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951214.xml
}
source src349
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951215.xml
}
source src350
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951216.xml
}
source src351
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951217.xml
}
source src352
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951218.xml
}

source src353
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951219.xml
}
source src354
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951220.xml
}
source src355
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951221.xml
}
source src356
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951222.xml
}
source src357
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951223.xml
}
source src358
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951224.xml
}
source src359
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951225.xml
}
source src360
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951226.xml
}
source src361
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951227.xml
}
source src362
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951228.xml
}

source src363
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951229.xml
}
source src364
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951230.xml
}
source src365
{
	type			= xmlpipe2
	xmlpipe_command		= cat /home/mmcastanho/Downloads/out/FSP.951231.xml
}



#############################################################################
## index definition
#############################################################################

index teste6
{
	source = src1
	source = src2
	source = src3
	source = src4
	source = src5
	source = src6
	source = src7
	source = src8
	source = src9
	source = src10
	source = src11
	source = src12
	source = src13
	source = src14
	source = src15
	source = src16
	source = src17
	source = src18
	source = src19
	source = src20
	source = src21
	source = src22
	source = src23
	source = src24
	source = src25
	source = src26
	source = src27
	source = src28
	source = src29
	source = src30
	source = src31
	source = src32
	source = src33
	source = src34
	source = src35
	source = src36
	source = src37
	source = src38
	source = src39
	source = src40
	source = src41
	source = src42
	source = src43
	source = src44
	source = src45
	source = src46
	source = src47
	source = src48
	source = src49
	source = src50
	source = src51
	source = src52
	source = src53
	source = src54
	source = src55
	source = src56
	source = src57
	source = src58
	source = src59
	source = src60
	source = src61
	source = src62
	source = src63
	source = src64
	source = src65
	source = src66
	source = src67
	source = src68
	source = src69
	source = src70
	source = src71
	source = src72
	source = src73
	source = src74
	source = src75
	source = src76
	source = src77
	source = src78
	source = src79
	source = src80
	source = src81
	source = src82
	source = src83
	source = src84
	source = src85
	source = src86
	source = src87
	source = src88
	source = src89
	source = src90
	source = src91
	source = src92
	source = src93
	source = src94
	source = src95
	source = src96
	source = src97
	source = src98
	source = src99
	source = src100
	source = src101
	source = src102
	source = src103
	source = src104
	source = src105
	source = src106
	source = src107
	source = src108
	source = src109
	source = src110
	source = src111
	source = src112
	source = src113
	source = src114
	source = src115
	source = src116
	source = src117
	source = src118
	source = src119
	source = src120
	source = src121
	source = src122
	source = src123
	source = src124
	source = src125
	source = src126
	source = src127
	source = src128
	source = src129
	source = src130
	source = src131
	source = src132
	source = src133
	source = src134
	source = src135
	source = src136
	source = src137
	source = src138
	source = src139
	source = src140
	source = src141
	source = src142
	source = src143
	source = src144
	source = src145
	source = src146
	source = src147
	source = src148
	source = src149
	source = src150
	source = src151
	source = src152
	source = src153
	source = src154
	source = src155
	source = src156
	source = src157
	source = src158
	source = src159
	source = src160
	source = src161
	source = src162
	source = src163
	source = src164
	source = src165
	source = src166
	source = src167
	source = src168
	source = src169
	source = src170
	source = src171
	source = src172
	source = src173
	source = src174
	source = src175
	source = src176
	source = src177
	source = src178
	source = src179
	source = src180
	source = src181
	source = src182
	source = src183
	source = src184
	source = src185
	source = src186
	source = src187
	source = src188
	source = src189
	source = src190
	source = src191
	source = src192
	source = src193
	source = src194
	source = src195
	source = src196
	source = src197
	source = src198
	source = src199
	source = src200
	source = src201
	source = src202
	source = src203
	source = src204
	source = src205
	source = src206
	source = src207
	source = src208
	source = src209
	source = src210
	source = src211
	source = src212
	source = src213
	source = src214
	source = src215
	source = src216
	source = src217
	source = src218
	source = src219
	source = src220
	source = src221
	source = src222
	source = src223
	source = src224
	source = src225
	source = src226
	source = src227
	source = src228
	source = src229
	source = src230
	source = src231
	source = src232
	source = src233
	source = src234
	source = src235
	source = src236
	source = src237
	source = src238
	source = src239
	source = src240
	source = src241
	source = src242
	source = src243
	source = src244
	source = src245
	source = src246
	source = src247
	source = src248
	source = src249
	source = src250
	source = src251
	source = src252
	source = src253
	source = src254
	source = src255
	source = src256
	source = src257
	source = src258
	source = src259
	source = src260
	source = src261
	source = src262
	source = src263
	source = src264
	source = src265
	source = src266
	source = src267
	source = src268
	source = src269
	source = src270
	source = src271
	source = src272
	source = src273
	source = src274
	source = src275
	source = src276
	source = src277
	source = src278
	source = src279
	source = src280
	source = src281
	source = src282
	source = src283
	source = src284
	source = src285
	source = src286
	source = src287
	source = src288
	source = src289
	source = src290
	source = src291
	source = src292
	source = src293
	source = src294
	source = src295
	source = src296
	source = src297
	source = src298
	source = src299
	source = src300
	source = src301
	source = src302
	source = src303
	source = src304
	source = src305
	source = src306
	source = src307
	source = src308
	source = src309
	source = src310
	source = src311
	source = src312
	source = src313
	source = src314
	source = src315
	source = src316
	source = src317
	source = src318
	source = src319
	source = src320
	source = src321
	source = src322
	source = src323
	source = src324
	source = src325
	source = src326
	source = src327
	source = src328
	source = src329
	source = src330
	source = src331
	source = src332
	source = src333
	source = src334
	source = src335
	source = src336
	source = src337
	source = src338
	source = src339
	source = src340
	source = src341
	source = src342
	source = src343
	source = src344
	source = src345
	source = src346
	source = src347
	source = src348
	source = src349
	source = src350
	source = src351
	source = src352
	source = src353
	source = src354
	source = src355
	source = src356
	source = src357
	source = src358
	source = src359
	source = src360
	source = src361
	source = src362
	source = src363
	source = src364
	source = src365
	path			= /etc/sphinxsearch/data/teste6
	docinfo			= extern

	# dictionary type, 'crc' or 'keywords'
	# crc is faster to index when no substring/wildcards searches are needed
	# crc with substrings might be faster to search but is much slower to index
	# (because all substrings are pre-extracted as individual keywords)
	# keywords is much faster to index with substrings, and index is much (3-10x) smaller
	# keywords supports wildcards, crc does not, and never will
	# optional, default is 'keywords'
	dict			= keywords

	mlock			= 0

	# a list of morphology preprocessors to apply
	# optional, default is empty
	#
	# builtin preprocessors are 'none', 'stem_en', 'stem_ru', 'stem_enru',
	# 'soundex', and 'metaphone'; additional preprocessors available from
	# libstemmer are 'libstemmer_XXX', where XXX is algorithm code
	# (see libstemmer_c/libstemmer/modules.txt)
	#
	# morphology		= stem_en, stem_ru, soundex
	# morphology		= libstemmer_german
	# morphology		= libstemmer_sv
	morphology		= none

	# minimum word length at which to enable stemming
	# optional, default is 1 (stem everything)
	#
	# min_stemming_len	= 1


	# stopword files list (space separated)
	# optional, default is empty
	# contents are plain text, charset_table and stemming are both applied
	#
	stopwords		= /home/mmcastanho/Downloads/stop.txt


	# wordforms file, in "mapfrom > mapto" plain text format
	# optional, default is empty
	#
	# wordforms		= /var/lib/sphinxsearch/data/wordforms.txt


	# tokenizing exceptions file
	# optional, default is empty
	#
	# plain text, case sensitive, space insensitive in map-from part
	# one "Map Several Words => ToASingleOne" entry per line
	#
	# exceptions		= /var/lib/sphinxsearch/data/exceptions.txt


	# embedded file size limit
	# optional, default is 16K
	#
	# exceptions, wordforms, and stopwords files smaller than this limit
	# are stored in the index; otherwise, their paths and sizes are stored
	#
	# embedded_limit		= 16K

	# minimum indexed word length
	# default is 1 (index everything)
	min_word_len		= 2


	# ignored characters list
	# optional, default value is empty
	#
	# ignore_chars		= U+00AD


	# minimum word prefix length to index
	# optional, default is 0 (do not index prefixes)
	#
	# min_prefix_len		= 0


	# minimum word infix length to index
	# optional, default is 0 (do not index infixes)
	#
	# min_infix_len		= 0


	# maximum substring (prefix or infix) length to index
	# optional, default is 0 (do not limit substring length)
	#
	# max_substring_len	= 8


	# list of fields to limit prefix/infix indexing to
	# optional, default value is empty (index all fields in prefix/infix mode)
	#
	# prefix_fields		= filename
	# infix_fields		= url, domain


	# expand keywords with exact forms and/or stars when searching fit indexes
	# search-time only, does not affect indexing, can be 0 or 1
	# optional, default is 0 (do not expand keywords)
	#
	# expand_keywords		= 1

	
	# n-gram length to index, for CJK indexing
	# only supports 0 and 1 for now, other lengths to be implemented
	# optional, default is 0 (disable n-grams)
	#
	# ngram_len		= 1


	# n-gram characters list, for CJK indexing
	# optional, default is empty
	#
	# ngram_chars		= U+3000..U+2FA1F


	# phrase boundary characters list
	# optional, default is empty
	#
	# phrase_boundary		= ., ?, !, U+2026 # horizontal ellipsis


	# phrase boundary word position increment
	# optional, default is 0
	#
	# phrase_boundary_step	= 100


	# blended characters list
	# blended chars are indexed both as separators and valid characters
	# for instance, AT&T will results in 3 tokens ("at", "t", and "at&t")
	# optional, default is empty
	#
	# blend_chars		= +, &, U+23


	# blended token indexing mode
	# a comma separated list of blended token indexing variants
	# known variants are trim_none, trim_head, trim_tail, trim_both, skip_pure
	# optional, default is trim_none
	#
	# blend_mode		= trim_tail, skip_pure


	# whether to strip HTML tags from incoming documents
	# known values are 0 (do not strip) and 1 (do strip)
	# optional, default is 0
	html_strip		= 0

	# what HTML attributes to index if stripping HTML
	# optional, default is empty (do not index anything)
	#
	# html_index_attrs	= img=alt,title; a=title;


	# what HTML elements contents to strip
	# optional, default is empty (do not strip element contents)
	#
	# html_remove_elements	= style, script


	# whether to preopen index data files on startup
	# optional, default is 0 (do not preopen), searchd-only
	#
	# preopen			= 1


	# whether to enable in-place inversion (2x less disk, 90-95% speed)
	# optional, default is 0 (use separate temporary files), indexer-only
	#
	# inplace_enable		= 1


	# in-place fine-tuning options
	# optional, defaults are listed below
	#
	# inplace_hit_gap		= 0 # preallocated hitlist gap size
	# inplace_docinfo_gap	= 0 # preallocated docinfo gap size
	# inplace_reloc_factor	= 0.1 # relocation buffer size within arena
	# inplace_write_factor	= 0.1 # write buffer size within arena


	# whether to index original keywords along with stemmed versions
	# enables "=exactform" operator to work
	# optional, default is 0
	#
	# index_exact_words	= 1


	# position increment on overshort (less that min_word_len) words
	# optional, allowed values are 0 and 1, default is 1
	#
	# overshort_step		= 1


	# position increment on stopword
	# optional, allowed values are 0 and 1, default is 1
	#
	# stopword_step		= 1


	# hitless words list
	# positions for these keywords will not be stored in the index
	# optional, allowed values are 'all', or a list file name
	#
	# hitless_words		= all
	# hitless_words		= hitless.txt


	# detect and index sentence and paragraph boundaries
	# required for the SENTENCE and PARAGRAPH operators to work
	# optional, allowed values are 0 and 1, default is 0
	#
	# index_sp			= 1


	# index zones, delimited by HTML/XML tags
	# a comma separated list of tags and wildcards
	# required for the ZONE operator to work
	# optional, default is empty string (do not index zones)
	#
	# index_zones		= title, h*, th


	# index per-document and average per-index field lengths, in tokens
	# required for the BM25A(), BM25F() in expression ranker
	# optional, default is 0 (do not index field lenghts)
	#
	# index_field_lengths	= 1


	# regular expressions (regexps) to filter the fields and queries with
	# gets applied to data source fields when indexing
	# gets applied to search queries when searching
	# multi-value, optional, default is empty list of regexps
	#
	# regexp_filter		= \b(\d+)\" => \1inch
	# regexp_filter		= (blue|red) => color


	# list of the words considered frequent with respect to bigram indexing
	# optional, default is empty
	#
	# bigram_freq_words	= the, a, i, you, my


	# bigram indexing mode
	# known values are none, all, first_freq, both_freq
	# option, default is none (do not index bigrams)
	#
	# bigram_index		= both_freq


	# snippet document file name prefix
	# preprended to file names when generating snippets using load_files option
	# WARNING, this is a prefix (not a path), trailing slash matters!
	# optional, default is empty
	#
	# snippets_file_prefix	= /mnt/mydocs/server1


	# whether to apply stopwords before or after stemming
	# optional, default is 0 (apply stopwords after stemming)
	#
	stopwords_unstemmed	= 1


	# path to a global (cluster-wide) keyword IDFs file
	# optional, default is empty (use local IDFs)
	#
	# global_idf		= /usr/local/sphinx/var/global.idf
}

#############################################################################
## indexer settings
#############################################################################

indexer
{
	# memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
	# optional, default is 128M, max is 2047M, recommended is 256M to 1024M
	mem_limit		= 128M

	# maximum IO calls per second (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	# max_iops		= 40


	# maximum IO call size, bytes (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	# max_iosize		= 1048576


	# maximum xmlpipe2 field length, bytes
	# optional, default is 2M
	#
	# max_xmlpipe2_field	= 4M


	# write buffer size, bytes
	# several (currently up to 4) buffers will be allocated
	# write buffers are allocated in addition to mem_limit
	# optional, default is 1M
	#
	# write_buffer		= 1M


	# maximum file field adaptive buffer size
	# optional, default is 8M, minimum is 1M
	#
	# max_file_field_buffer	= 32M


	# how to handle IO errors in file fields
	# known values are 'ignore_field', 'skip_document', and 'fail_index'
	# optional, default is 'ignore_field'
	#
	# on_file_field_error = skip_document


	# how to handle syntax errors in JSON attributes
	# known values are 'ignore_attr' and 'fail_index'
	# optional, default is 'ignore_attr'
	#
	# on_json_attr_error = fail_index


	# whether to auto-convert numeric values from strings in JSON attributes
	# with auto-conversion, string value with actually numeric data
	# (as in {"key":"12345"}) gets stored as a number, rather than string
	# optional, allowed values are 0 and 1, default is 0 (do not convert)
	#
	# json_autoconv_numbers = 1


	# whether and how to auto-convert key names in JSON attributes
	# known value is 'lowercase'
	# optional, default is unspecified (do nothing)
	#
	# json_autoconv_keynames = lowercase


	# lemmatizer cache size
	# improves the indexing time when the lemmatization is enabled
	# optional, default is 256K
	#
	# lemmatizer_cache = 512M
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
	# [hostname:]port[:protocol], or /unix/socket/path to listen on
	# known protocols are 'sphinx' (SphinxAPI) and 'mysql41' (SphinxQL)
	#
	# multi-value, multiple listen points are allowed
	# optional, defaults are 9312:sphinx and 9306:mysql41, as below
	#
	# listen			= 127.0.0.1
	# listen			= 192.168.0.1:9312
	# listen			= 9312
	# listen			= /var/run/searchd.sock
	listen			= 9312
	listen			= 9306:mysql41

	# log file, searchd run info is logged here
	# optional, default is 'searchd.log'
	log			= /etc/sphinxsearch/log/searchd.log

	# query log file, all search queries are logged here
	# optional, default is empty (do not log queries)
	query_log		= /etc/sphinxsearch/log/query.log

	# client read timeout, seconds
	# optional, default is 5
	read_timeout		= 5

	# request timeout, seconds
	# optional, default is 5 minutes
	client_timeout		= 300

	# maximum amount of children to fork (concurrent searches to run)
	# optional, default is 0 (unlimited)
	max_children		= 30

	# maximum amount of persistent connections from this master to each agent host
	# optional, but necessary if you use agent_persistent. It is reasonable to set the value
	# as max_children, or less on the agent's hosts.
	persistent_connections_limit	= 30

	# PID file, searchd process ID file name
	# mandatory
	pid_file		= /etc/sphinxsearch/pid/searchd.pid

	# seamless rotate, prevents rotate stalls if precaching huge datasets
	# optional, default is 1
	seamless_rotate		= 1

	# whether to forcibly preopen all indexes on startup
	# optional, default is 1 (preopen everything)
	preopen_indexes		= 1

	# whether to unlink .old index copies on succesful rotation.
	# optional, default is 1 (do unlink)
	unlink_old		= 1

	# attribute updates periodic flush timeout, seconds
	# updates will be automatically dumped to disk this frequently
	# optional, default is 0 (disable periodic flush)
	#
	# attr_flush_period	= 900


	# MVA updates pool size
	# shared between all instances of searchd, disables attr flushes!
	# optional, default size is 1M
	mva_updates_pool	= 1M

	# max allowed network packet size
	# limits both query packets from clients, and responses from agents
	# optional, default size is 8M
	max_packet_size		= 8M

	# max allowed per-query filter count
	# optional, default is 256
	max_filters		= 256

	# max allowed per-filter values count
	# optional, default is 4096
	max_filter_values	= 4096


	# socket listen queue length
	# optional, default is 5
	#
	# listen_backlog		= 5


	# per-keyword read buffer size
	# optional, default is 256K
	#
	# read_buffer		= 256K


	# unhinted read size (currently used when reading hits)
	# optional, default is 32K
	#
	# read_unhinted		= 32K


	# max allowed per-batch query count (aka multi-query count)
	# optional, default is 32
	max_batch_queries	= 32


	# max common subtree document cache size, per-query
	# optional, default is 0 (disable subtree optimization)
	#
	# subtree_docs_cache	= 4M


	# max common subtree hit cache size, per-query
	# optional, default is 0 (disable subtree optimization)
	#
	# subtree_hits_cache	= 8M


	# multi-processing mode (MPM)
	# known values are none, fork, prefork, and threads
	# threads is required for RT backend to work
	# optional, default is threads
	workers			= threads # for RT to work


	# max threads to create for searching local parts of a distributed index
	# optional, default is 0, which means disable multi-threaded searching
	# should work with all MPMs (ie. does NOT require workers=threads)
	#
	# dist_threads		= 4


	# binlog files path; use empty string to disable binlog
	# optional, default is build-time configured data directory
	#
	# binlog_path		= # disable logging
	# binlog_path		= /var/lib/sphinxsearch/data # binlog.001 etc will be created there


	# binlog flush/sync mode
	# 0 means flush and sync every second
	# 1 means flush and sync every transaction
	# 2 means flush every transaction, sync every second
	# optional, default is 2
	#
	# binlog_flush		= 2


	# binlog per-file size limit
	# optional, default is 128M, 0 means no limit
	#
	# binlog_max_log_size	= 256M


	# per-thread stack size, only affects workers=threads mode
	# optional, default is 64K
	#
	# thread_stack			= 128K


	# per-keyword expansion limit (for dict=keywords prefix searches)
	# optional, default is 0 (no limit)
	#
	# expansion_limit		= 1000


	# RT RAM chunks flush period
	# optional, default is 0 (no periodic flush)
	#
	# rt_flush_period		= 900


	# query log file format
	# optional, known values are plain and sphinxql, default is plain
	#
	# query_log_format		= sphinxql


	# version string returned to MySQL network protocol clients
	# optional, default is empty (use Sphinx version)
	#
	# mysql_version_string	= 5.0.37


	# trusted plugin directory
	# optional, default is empty (disable UDFs)
	#
	# plugin_dir			= /usr/local/sphinx/lib


	# default server-wide collation
	# optional, default is libc_ci
	#
	# collation_server		= utf8_general_ci


	# server-wide locale for libc based collations
	# optional, default is C
	#
	# collation_libc_locale	= ru_RU.UTF-8


	# threaded server watchdog (only used in workers=threads mode)
	# optional, values are 0 and 1, default is 1 (watchdog on)
	#
	# watchdog				= 1

	
	# costs for max_predicted_time model, in (imaginary) nanoseconds
	# optional, default is "doc=64, hit=48, skip=2048, match=64"
	#
	# predicted_time_costs	= doc=64, hit=48, skip=2048, match=64


	# current SphinxQL state (uservars etc) serialization path
	# optional, default is none (do not serialize SphinxQL state)
	#
	# sphinxql_state			= sphinxvars.sql


	# maximum RT merge thread IO calls per second, and per-call IO size
	# useful for throttling (the background) OPTIMIZE INDEX impact
	# optional, default is 0 (unlimited)
	#
	# rt_merge_iops			= 40
	# rt_merge_maxiosize		= 1M


	# interval between agent mirror pings, in milliseconds
	# 0 means disable pings
	# optional, default is 1000
	#
	# ha_ping_interval		= 0


	# agent mirror statistics window size, in seconds
	# stats older than the window size (karma) are retired
	# that is, they will not affect master choice of agents in any way
	# optional, default is 60 seconds
	#
	# ha_period_karma			= 60


	# delay between preforked children restarts on rotation, in milliseconds
	# optional, default is 0 (no delay)
	#
	# prefork_rotation_throttle	= 100


	# a prefix to prepend to the local file names when creating snippets
	# with load_files and/or load_files_scatter options
	# optional, default is empty
	#
	# snippets_file_prefix		= /mnt/common/server1/
}

#############################################################################
## common settings
#############################################################################

common
{

	# lemmatizer dictionaries base path
	# optional, defaut is /usr/local/share (see ./configure --datadir)
	#
	# lemmatizer_base = /usr/local/share/sphinx/dicts

	# path to RLP root directory
	# optional, defaut is /usr/local/share (see ./configure --datadir)
	#
	# rlp_root = /usr/local/share/sphinx/rlp

	# path to RLP environment file
	# optional, defaut is /usr/local/share/rlp-environment.xml (see ./configure --datadir)
	#
	# rlp_environment = /usr/local/share/sphinx/rlp/rlp/etc/rlp-environment.xml
}

# --eof--
